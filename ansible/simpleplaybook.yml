---
- hosts: all
  vars:
    - username: "nbrosson"
    - docker_group: "docker"
    - ssh_key_path: "../tf/ssh-keys/aws_ssh_key.pub"
  become: true
  tasks:
    - name: Install aptitude using apt
      apt: name=aptitude state=latest update_cache=yes force_apt_get=yes
    
    - name: Install required system packages
      apt: name={{ item }} state=latest update_cache=yes
      loop: [ 'apt-transport-https', 'ca-certificates', 'curl', 'software-properties-common', 'python3-pip', 'virtualenv', 'python3-setuptools']
    
    - name: Add Docker GPG apt Key
      apt_key:
        url: https://download.docker.com/linux/ubuntu/gpg
        state: present   
    
    - name: Add Docker Repository
      apt_repository:
        repo: deb https://download.docker.com/linux/ubuntu bionic stable
        state: present
    
    - name: Update apt and install docker-ce
      apt: update_cache=yes name=docker-ce state=latest
    
    - name: Make sure we have a 'wheel' group
      group:
        name: wheel
        state: present
    
    - name: Allow 'wheel' group to have passwordless sudo
      lineinfile:
        dest: /etc/sudoers
        state: present
        regexp: '^%wheel'
        line: '%wheel ALL=(ALL) NOPASSWD: ALL'
        validate: 'visudo -cf %s'
    
    - name: Add sudoers users to wheel group
      user:
        name="{{ username }}"
        groups=wheel
        append=yes
        state=present
        createhome=yes
    
    - name: Set up authorized keys for the deployer user
      authorized_key: user="{{ username }}" key="{{item}}"
      with_file:
        - "{{ ssh_key_path }}"
  
    - name: Create a group Docker
      group:
        name: docker
        state: present
      when: docker_group != ""
      
    - name: Let a user run docker without sudo.
      become: yes
      user:
        name: "{{ username }}"
        groups: "{{ docker_group }}"
        append: yes
        state: present
      when: username != "" and docker_group != ""
